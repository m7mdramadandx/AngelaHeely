plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.example.angelaheely'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.angelaheely"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField "String", "BASE_URL", "\"https://run.mocky.io/\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    buildFeatures {
        viewBinding true
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'


    implementation "androidx.navigation:navigation-ui-ktx:2.5.0"
    implementation "androidx.hilt:hilt-navigation-fragment:1.0.0"

/*
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.7.0'
    implementation platform('androidx.compose:compose-bom:2023.03.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    androidTestImplementation platform('androidx.compose:compose-bom:2023.03.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
*/
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation "com.google.dagger:hilt-android:2.44.2"
    implementation 'androidx.test.ext:junit-ktx:1.1.5'
    kapt "com.google.dagger:hilt-android-compiler:2.44.2"
    kapt "com.google.dagger:hilt-compiler:2.44.2"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // Retrofit
    api(Libs.retrofit)
    api(Libs.retrofitConverterGson)
    api(Libs.retrofitCoroutinesAdapter)
    api(Libs.okhttp3)
    api(Libs.okhttp3LoggingInterceptor)
    debugApi(Libs.chuckDebug)
    releaseApi(Libs.chuckRelease)
    api(Libs.gson)

    testImplementation(TestLibs.junit)
    testImplementation(TestLibs.archCoreTesting)
    testImplementation(TestLibs.mockk)

    //  LiveData
    api(Libs.lifecycleLiveData)
    api(Libs.lifecycleCommon)
    api(Libs.lifecycleExt)
    api(Libs.lifecycleRuntime)
    api(Libs.lifecycleViewModel)
//    api(Libs.lifecycleViewModelHilt)

    // RoomDb
    api(Libs.roomRunTime)
    kapt(Libs.kaptRoom)
    api(Libs.roomKtx)

    // Coroutines
    api(Libs.coroutinesCore)
    api(Libs.coroutinesAndroid)
    api(Libs.coroutinesPlayServices)

    // UI
    api(Libs.material)
    api(Libs.coreKtx)
    api(Libs.fragmentKtx)
    api(Libs.appCompat)
    api(Libs.appCompatResources)
    api(Libs.splashscreen)

    // accompanist
    api(Libs.accompanistAppcompatTheme)
    api(Libs.accompanistInsets)
    api(Libs.accompanistInsetsUI)
    api(Libs.accompanistSystemUiController)
//    api(Libs.accompanistFlowLayout)
    api(Libs.accompanistPagerIndicator)
    api(Libs.accompanistPager)

    // coil
    api(Libs.coilCompose)

    // Integration with activities
    api(Libs.composeActivity)

    api(Libs.lifecycleViewModelCompose)

    api(Libs.composeCompiler)
    api(Libs.composeUi)
    api(Libs.constrainLayoutCompose)

    // Tooling support (Previews, etc.)
    api(Libs.composeTooling)
    debugImplementation(Libs.composeTooling)
    api(Libs.composeToolingPreview)

    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    api(Libs.composeFoundation)

    // Material Design
    api(Libs.composeMaterial3)
    api(Libs.composeMaterial)

    // Integration with observables
    api(Libs.composeRuntimeLiveData)

    // storage permissions
    api(Libs.accompanistPermissions)

}